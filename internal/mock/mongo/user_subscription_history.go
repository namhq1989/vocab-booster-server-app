// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/subscription/domain/user_subscription_history.go
//
// Generated by this command:
//
//	mockgen -source=pkg/subscription/domain/user_subscription_history.go -destination=internal/mock/mongo/user_subscription_history.go -package=mockmongo
//

// Package mockmongo is a generated GoMock package.
package mockmongo

import (
	reflect "reflect"

	appcontext "github.com/namhq1989/vocab-booster-server-app/core/appcontext"
	domain "github.com/namhq1989/vocab-booster-server-app/pkg/subscription/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockUserSubscriptionHistoryRepository is a mock of UserSubscriptionHistoryRepository interface.
type MockUserSubscriptionHistoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserSubscriptionHistoryRepositoryMockRecorder
}

// MockUserSubscriptionHistoryRepositoryMockRecorder is the mock recorder for MockUserSubscriptionHistoryRepository.
type MockUserSubscriptionHistoryRepositoryMockRecorder struct {
	mock *MockUserSubscriptionHistoryRepository
}

// NewMockUserSubscriptionHistoryRepository creates a new mock instance.
func NewMockUserSubscriptionHistoryRepository(ctrl *gomock.Controller) *MockUserSubscriptionHistoryRepository {
	mock := &MockUserSubscriptionHistoryRepository{ctrl: ctrl}
	mock.recorder = &MockUserSubscriptionHistoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserSubscriptionHistoryRepository) EXPECT() *MockUserSubscriptionHistoryRepositoryMockRecorder {
	return m.recorder
}

// CreateUserSubscriptionHistory mocks base method.
func (m *MockUserSubscriptionHistoryRepository) CreateUserSubscriptionHistory(ctx *appcontext.AppContext, history domain.UserSubscriptionHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserSubscriptionHistory", ctx, history)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUserSubscriptionHistory indicates an expected call of CreateUserSubscriptionHistory.
func (mr *MockUserSubscriptionHistoryRepositoryMockRecorder) CreateUserSubscriptionHistory(ctx, history any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserSubscriptionHistory", reflect.TypeOf((*MockUserSubscriptionHistoryRepository)(nil).CreateUserSubscriptionHistory), ctx, history)
}
