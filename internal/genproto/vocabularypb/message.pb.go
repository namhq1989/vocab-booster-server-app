// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: vocabularypb/message.proto

package vocabularypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Multilingual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	English    string `protobuf:"bytes,1,opt,name=english,proto3" json:"english,omitempty"`
	Vietnamese string `protobuf:"bytes,2,opt,name=vietnamese,proto3" json:"vietnamese,omitempty"`
}

func (x *Multilingual) Reset() {
	*x = Multilingual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Multilingual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Multilingual) ProtoMessage() {}

func (x *Multilingual) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Multilingual.ProtoReflect.Descriptor instead.
func (*Multilingual) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{0}
}

func (x *Multilingual) GetEnglish() string {
	if x != nil {
		return x.English
	}
	return ""
}

func (x *Multilingual) GetVietnamese() string {
	if x != nil {
		return x.Vietnamese
	}
	return ""
}

type VocabularyBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Term          string   `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	PartsOfSpeech []string `protobuf:"bytes,3,rep,name=partsOfSpeech,proto3" json:"partsOfSpeech,omitempty"`
	Ipa           string   `protobuf:"bytes,4,opt,name=ipa,proto3" json:"ipa,omitempty"`
	Audio         string   `protobuf:"bytes,5,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *VocabularyBrief) Reset() {
	*x = VocabularyBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyBrief) ProtoMessage() {}

func (x *VocabularyBrief) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyBrief.ProtoReflect.Descriptor instead.
func (*VocabularyBrief) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{1}
}

func (x *VocabularyBrief) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VocabularyBrief) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *VocabularyBrief) GetPartsOfSpeech() []string {
	if x != nil {
		return x.PartsOfSpeech
	}
	return nil
}

func (x *VocabularyBrief) GetIpa() string {
	if x != nil {
		return x.Ipa
	}
	return ""
}

func (x *VocabularyBrief) GetAudio() string {
	if x != nil {
		return x.Audio
	}
	return ""
}

type Vocabulary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId      string                    `protobuf:"bytes,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	Term          string                    `protobuf:"bytes,3,opt,name=term,proto3" json:"term,omitempty"`
	Definitions   []*VocabularyDefinition   `protobuf:"bytes,4,rep,name=definitions,proto3" json:"definitions,omitempty"`
	PartsOfSpeech []string                  `protobuf:"bytes,5,rep,name=partsOfSpeech,proto3" json:"partsOfSpeech,omitempty"`
	Ipa           string                    `protobuf:"bytes,6,opt,name=ipa,proto3" json:"ipa,omitempty"`
	Audio         string                    `protobuf:"bytes,7,opt,name=audio,proto3" json:"audio,omitempty"`
	Synonyms      []string                  `protobuf:"bytes,8,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Antonyms      []string                  `protobuf:"bytes,9,rep,name=antonyms,proto3" json:"antonyms,omitempty"`
	Examples      []*VocabularyExampleBrief `protobuf:"bytes,10,rep,name=examples,proto3" json:"examples,omitempty"`
	IsBookmarked  bool                      `protobuf:"varint,11,opt,name=isBookmarked,proto3" json:"isBookmarked,omitempty"`
}

func (x *Vocabulary) Reset() {
	*x = Vocabulary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vocabulary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vocabulary) ProtoMessage() {}

func (x *Vocabulary) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vocabulary.ProtoReflect.Descriptor instead.
func (*Vocabulary) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{2}
}

func (x *Vocabulary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vocabulary) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Vocabulary) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *Vocabulary) GetDefinitions() []*VocabularyDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *Vocabulary) GetPartsOfSpeech() []string {
	if x != nil {
		return x.PartsOfSpeech
	}
	return nil
}

func (x *Vocabulary) GetIpa() string {
	if x != nil {
		return x.Ipa
	}
	return ""
}

func (x *Vocabulary) GetAudio() string {
	if x != nil {
		return x.Audio
	}
	return ""
}

func (x *Vocabulary) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *Vocabulary) GetAntonyms() []string {
	if x != nil {
		return x.Antonyms
	}
	return nil
}

func (x *Vocabulary) GetExamples() []*VocabularyExampleBrief {
	if x != nil {
		return x.Examples
	}
	return nil
}

func (x *Vocabulary) GetIsBookmarked() bool {
	if x != nil {
		return x.IsBookmarked
	}
	return false
}

type VocabularyDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos        string        `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Definition *Multilingual `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *VocabularyDefinition) Reset() {
	*x = VocabularyDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyDefinition) ProtoMessage() {}

func (x *VocabularyDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyDefinition.ProtoReflect.Descriptor instead.
func (*VocabularyDefinition) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{3}
}

func (x *VocabularyDefinition) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *VocabularyDefinition) GetDefinition() *Multilingual {
	if x != nil {
		return x.Definition
	}
	return nil
}

type VocabularyExampleBrief struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content  *Multilingual       `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Audio    string              `protobuf:"bytes,3,opt,name=audio,proto3" json:"audio,omitempty"`
	MainWord *VocabularyMainWord `protobuf:"bytes,4,opt,name=mainWord,proto3" json:"mainWord,omitempty"`
}

func (x *VocabularyExampleBrief) Reset() {
	*x = VocabularyExampleBrief{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyExampleBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyExampleBrief) ProtoMessage() {}

func (x *VocabularyExampleBrief) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyExampleBrief.ProtoReflect.Descriptor instead.
func (*VocabularyExampleBrief) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{4}
}

func (x *VocabularyExampleBrief) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VocabularyExampleBrief) GetContent() *Multilingual {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *VocabularyExampleBrief) GetAudio() string {
	if x != nil {
		return x.Audio
	}
	return ""
}

func (x *VocabularyExampleBrief) GetMainWord() *VocabularyMainWord {
	if x != nil {
		return x.MainWord
	}
	return nil
}

type VocabularyMainWord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Base string `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	Pos  string `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
}

func (x *VocabularyMainWord) Reset() {
	*x = VocabularyMainWord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vocabularypb_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VocabularyMainWord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyMainWord) ProtoMessage() {}

func (x *VocabularyMainWord) ProtoReflect() protoreflect.Message {
	mi := &file_vocabularypb_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyMainWord.ProtoReflect.Descriptor instead.
func (*VocabularyMainWord) Descriptor() ([]byte, []int) {
	return file_vocabularypb_message_proto_rawDescGZIP(), []int{5}
}

func (x *VocabularyMainWord) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *VocabularyMainWord) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *VocabularyMainWord) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

var File_vocabularypb_message_proto protoreflect.FileDescriptor

var file_vocabularypb_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x0c, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x67, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75,
	0x6c, 0x61, 0x72, 0x79, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x66, 0x53, 0x70, 0x65,
	0x65, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x70, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0xfe, 0x02, 0x0a, 0x0a,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x44, 0x0a, 0x0b, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x56,
	0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x73, 0x4f, 0x66,
	0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x61, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x79, 0x6d, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x52, 0x08,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x22, 0x64, 0x0a, 0x14,
	0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x6f, 0x63,
	0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x75, 0x61, 0x6c, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x61, 0x69,
	0x6e, 0x57, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x6d,
	0x61, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x56, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x4d, 0x61, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x42, 0xb3, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x42, 0x0c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x76, 0x6f,
	0x63, 0x61, 0x62, 0x2d, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62,
	0x75, 0x6c, 0x61, 0x72, 0x79, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x70, 0x62, 0x2f, 0x76, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0xa2,
	0x02, 0x03, 0x56, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61,
	0x72, 0x79, 0x70, 0x62, 0xca, 0x02, 0x0c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72,
	0x79, 0x70, 0x62, 0xe2, 0x02, 0x18, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79,
	0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0c, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vocabularypb_message_proto_rawDescOnce sync.Once
	file_vocabularypb_message_proto_rawDescData = file_vocabularypb_message_proto_rawDesc
)

func file_vocabularypb_message_proto_rawDescGZIP() []byte {
	file_vocabularypb_message_proto_rawDescOnce.Do(func() {
		file_vocabularypb_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_vocabularypb_message_proto_rawDescData)
	})
	return file_vocabularypb_message_proto_rawDescData
}

var file_vocabularypb_message_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vocabularypb_message_proto_goTypes = []interface{}{
	(*Multilingual)(nil),           // 0: vocabularypb.Multilingual
	(*VocabularyBrief)(nil),        // 1: vocabularypb.VocabularyBrief
	(*Vocabulary)(nil),             // 2: vocabularypb.Vocabulary
	(*VocabularyDefinition)(nil),   // 3: vocabularypb.VocabularyDefinition
	(*VocabularyExampleBrief)(nil), // 4: vocabularypb.VocabularyExampleBrief
	(*VocabularyMainWord)(nil),     // 5: vocabularypb.VocabularyMainWord
}
var file_vocabularypb_message_proto_depIdxs = []int32{
	3, // 0: vocabularypb.Vocabulary.definitions:type_name -> vocabularypb.VocabularyDefinition
	4, // 1: vocabularypb.Vocabulary.examples:type_name -> vocabularypb.VocabularyExampleBrief
	0, // 2: vocabularypb.VocabularyDefinition.definition:type_name -> vocabularypb.Multilingual
	0, // 3: vocabularypb.VocabularyExampleBrief.content:type_name -> vocabularypb.Multilingual
	5, // 4: vocabularypb.VocabularyExampleBrief.mainWord:type_name -> vocabularypb.VocabularyMainWord
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_vocabularypb_message_proto_init() }
func file_vocabularypb_message_proto_init() {
	if File_vocabularypb_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vocabularypb_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Multilingual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vocabulary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyExampleBrief); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vocabularypb_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VocabularyMainWord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vocabularypb_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vocabularypb_message_proto_goTypes,
		DependencyIndexes: file_vocabularypb_message_proto_depIdxs,
		MessageInfos:      file_vocabularypb_message_proto_msgTypes,
	}.Build()
	File_vocabularypb_message_proto = out.File
	file_vocabularypb_message_proto_rawDesc = nil
	file_vocabularypb_message_proto_goTypes = nil
	file_vocabularypb_message_proto_depIdxs = nil
}
