syntax = "proto3";

package vocabularypb;

import "vocabularypb/message.proto";

service VocabularyService {
  rpc SearchVocabulary(SearchVocabularyRequest) returns (SearchVocabularyResponse) {}
  rpc BookmarkVocabulary(BookmarkVocabularyRequest) returns (BookmarkVocabularyResponse) {}
  rpc GetUserBookmarkedVocabularies(GetUserBookmarkedVocabulariesRequest) returns (GetUserBookmarkedVocabulariesResponse) {}
  rpc GetWordOfTheDay(GetWordOfTheDayRequest) returns (GetWordOfTheDayResponse) {}
  rpc GetVocabularyCommunitySentences(GetVocabularyCommunitySentencesRequest) returns (GetVocabularyCommunitySentencesResponse) {}
}

// SEARCH VOCABULARY

message SearchVocabularyRequest {
  string performerId = 1;
  string term = 2;
}

message SearchVocabularyResponse {
  bool found = 1;
  repeated string suggestions = 2;
  Vocabulary vocabulary = 3;
}

// BOOKMARK VOCABULARY

message BookmarkVocabularyRequest {
  string userId = 1;
  string vocabularyId = 2;
}

message BookmarkVocabularyResponse {
  bool isBookmarked = 1;
}

// GET USER BOOKMARKED VOCABULARIES

message GetUserBookmarkedVocabulariesRequest {
  string userId = 1;
  string pageToken = 2;
}

message GetUserBookmarkedVocabulariesResponse {
  repeated VocabularyBrief vocabularies = 1;
  string nextPageToken = 2;
}

// GET WORD OF THE DAY

message GetWordOfTheDayRequest {
  string lang = 1;
}

message GetWordOfTheDayResponse {
  VocabularyBrief vocabulary = 1;
  Multilingual information = 2;
}

// GET VOCABULARY COMMUNITY SENTENCES

message GetVocabularyCommunitySentencesRequest {
  string vocabularyId = 1;
  string userId = 2;
  string lang = 3;
  string pageToken = 4;
}

message GetVocabularyCommunitySentencesResponse {
  repeated CommunitySentence sentences = 1;
  string nextPageToken = 2;
}
