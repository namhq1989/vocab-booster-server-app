version: '3'

tasks:
  install-tools:
    cmds:
      - echo "installing tools"
      - go install google.golang.org/protobuf/cmd/protoc-gen-go
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc
      - echo "done"

  generate:
    cmds:
      - echo "running code generation"
      - go generate ./...
      - echo "done"

  run:
    cmds:
      - doppler run -- go run cmd/*.go

  mock-gen:
    cmds:
      # grpc
      - mockgen -source=internal/genproto/userpb/hub_grpc.pb.go -destination=internal/mock/grpc/user_client.go -package=mockgrpc

      # jwt
      - mockgen -source=internal/utils/jwt/jwt.go -destination=internal/mock/jwt/jwt.go -package=mockjwt

      # mongo
      # user
      - mockgen -source=pkg/user/domain/user.go -destination=internal/mock/user/user.go -package=mockuser
      - mockgen -source=pkg/user/domain/user_hub.go -destination=internal/mock/user/user_hub.go -package=mockuser
      - mockgen -source=pkg/user/domain/gamification_hub.go -destination=internal/mock/user/gamification_hub.go -package=mockuser
      - mockgen -source=pkg/user/domain/exercise_hub.go -destination=internal/mock/user/exercise_hub.go -package=mockuser

      # subscription
      - mockgen -source=pkg/subscription/domain/user_subscription.go -destination=internal/mock/subscription/user_subscription.go -package=mocksubscription
      - mockgen -source=pkg/subscription/domain/user_subscription_history.go -destination=internal/mock/subscription/user_subscription_history.go -package=mocksubscription
      - mockgen -source=pkg/subscription/domain/caching.go -destination=internal/mock/subscription/caching.go -package=mocksubscription
      - mockgen -source=pkg/subscription/domain/queue.go -destination=internal/mock/subscription/queue.go -package=mocksubscription
      - mockgen -source=pkg/subscription/domain/service.go -destination=internal/mock/subscription/service.go -package=mocksubscription
      - mockgen -source=pkg/subscription/domain/user_subscription_hub.go -destination=internal/mock/subscription/user_subscription_hub.go -package=mocksubscription

      # exercise
      - mockgen -source=pkg/exercise/domain/queue.go -destination=internal/mock/exercise/queue.go -package=mockexercise
      - mockgen -source=pkg/exercise/domain/exercise_hub.go -destination=internal/mock/exercise/exercise_hub.go -package=mockexercise
      - mockgen -source=pkg/exercise/domain/gamification_hub.go -destination=internal/mock/exercise/gamification_hub.go -package=mockexercise

      # gamification
      - mockgen -source=pkg/gamification/domain/point.go -destination=internal/mock/gamification/point.go -package=mockgamification
      - mockgen -source=pkg/gamification/domain/completion_time.go -destination=internal/mock/gamification/completion_time.go -package=mockgamification
      - mockgen -source=pkg/gamification/domain/user_stats.go -destination=internal/mock/gamification/user_stats.go -package=mockgamification
      - mockgen -source=pkg/gamification/domain/service.go -destination=internal/mock/gamification/service.go -package=mockgamification

      # vocabulary
      - mockgen -source=pkg/vocabulary/domain/vocabulary.go -destination=internal/mock/vocabulary/vocabulary.go -package=mockvocabulary
  test:
    dotenv: ['.env.test']
    cmds:
      - gotestsum --junitfile-hide-empty-pkg --format testname ./pkg/...

  test-coverage:
    dotenv: ['.env.test']
    cmds:
      - gotestsum --format testname -- -coverprofile=coverrage.out ./pkg/... && \
      - go tool cover -html=coverrage.out -o coverage.html

  test-debug:
    dotenv: ['.env.test']
    cmds:
      - go test -v ./pkg/...